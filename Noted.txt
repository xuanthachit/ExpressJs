- create the package.json file using npm
	npm init
- To install Express and add it to our package.json file
	npm install --save express
- To install nodemon: Su dung de server tu dong Restart lai moi khi co su thay doi trong file
	npm install -g nodemon
- Run
	nodemon index.js
- In app.listen(port, [host], [backlog], [callback]])
	backlog: The maximum number of queued pending connections. The default is 511.
	callback: An asynchronous function that is called when the server starts listening for requests.
- A special method, all, is provided by Express to handle all types of http methods at a particular 
	route using the same function.
	app.all('/test', function(req, res){
   		res.send("HTTP method doesn't have any effect on this route!");
	});
------------------ Routers -----------------
- Tach nho cac routers ra khoi file main vi du index.js
	var router = express.Router();
	...
	module.exports = router;
--> In index call router:
	var things = require('./things.js');
both index.js and things.js should be in same directory
	app.use('/things', things);
------------------ Dynamic route -------------
- Using dynamic routes allows us to pass parameters and process based on them

----------------------- Pattern Matched Routes ------------------------

-----------------------------MiddleWare ------------------------
- Application-level middleware: app
- Router-level middleware: route
- Error-handling middleware: can 4 tham so --> app.use(function (err, req, res, next) {}
- Built-in middleware: express.static
- Third-party middleware
-------------------------- Templating ------------------
- Pug: Tao file pud de hien thi ra client dang HTML
	npm install --save pug
------------------------- Form data ------------------
- install
	npm install --save body-parser multer
-------------------------- Database -----------------------------
- Install mogose
	npm install --save mongoose
- Tao moi CSDL
	mongo
	use my_db
- Retrieving Documents
	Model.find(conditions, callback)
	Model.findOne(conditions, callback)
	Model.findById(id, callback)
- Updating Documents
	Model.update(condition, updates, callback)
	Model.findOneAndUpdate(condition, updates, callback)
	Model.findByIdAndUpdate(id, updates, callback)
- Deleting Documents
	Model.remove(condition, [callback])
	Model.findOneAndRemove(condition, [callback])
	Model.findByIdAndRemove(id, [callback])
--------------------------- Cookies ---------------------
- Dung de gui du lieu nho theo nhu cau luu lai tai Client, moi lan user load website cookie se gui request ve server
- install
	npm install --save cookie-parser
------------------------ Session ------------------------------
- Dung de truyen du lieu giua client va server, nhung khong doc duoc va luu tru tai client nhu cookies
- install
	npm install --save express-session


--------------------- Scaffolding ------------

- Cho phep tao ra khung cua ung dung ma khong can tao tay director, middleware, 
route file...
- Scaffolding vi du la Yeoman

	npm install -g yeoman
OR
	npm install -g generator-express-simple


------------------------ Error Handling---------------------

--------------------- DEBUG ----------------

	DEBUG = express:* node index.js
OR
	DEBUG = express:application,express:router node index.js


------------------ Structure --------------

				----- Website ------
test-project/
   node_modules/
   config/
      db.js                //Database connection and configuration
      credentials.js       //Passwords/API keys for external services used by your app
      config.js            //Other environment variables
   models/                 //For mongoose schemas
      users.js
      things.js
   routes/                 //All routes for different entities in different files 
      users.js
      things.js
   views/
      index.pug
      404.pug
        ...
   public/                 //All static content being served
      images/
      css/
      javascript/
   app.js
   routes.js               //Require all routes in this and then require this file in 
   app.js 
   package.json

			--------- Rest API -----------
test-project/
   node_modules/
   config/
      db.js                //Database connection and configuration
      credentials.js       //Passwords/API keys for external services used by your app
   models/                 //For mongoose schemas
      users.js
      things.js
   routes/                 //All routes for different entities in different files 
      users.js
      things.js
   app.js
   routes.js               //Require all routes in this and then require this file in 
   app.js 
   package.json